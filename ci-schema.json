{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/Microsoft/vsts-agent/blob/master/src/Misc/ci-schema.json",
  "$comment": "v1.137.0",
  "title": "Pipeline schema",
  "description": "A pipeline definition",
  "oneOf": [
    { "$ref": "#/definitions/pipeline" },
    { "$ref": "#/definitions/phase"}
  ],
  "definitions": {
    "pipeline": {
      "type": "object",
      "required": [],
      "properties": {
        "name": {
          "description": "Pipeline name",
          "type": "string"
        },
        "resources": {
          "description": "Containers and repositories used in the build",
          "type": "object",
          "properties": {
            "containers": {
              "$comment": "TODO"
            },
            "repository": {
              "$comment": "TODO"
            }
          },
          "additionalProperties": false
        },
        "variables": {
          "description": "Pipeline-wide variables",
          "type": "object"
        },
        "phases": {
          "description": "Phases of the pipeline",
          "type": "array",
          "items": {
            "$ref": "#/definitions/phase"
          }
        },
        "additionalProperties": false
      }
    },
    "phase": {
      "type": "object",
      "oneOf": [
        { "required": ["queue"] },
        { "required": ["server"] }
      ],
      "properties": {
        "phase": {
          "type": "string",
          "description": "ID of the phase",
          "pattern": "^[_A-Za-z0-9]*$"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name of the phase"
        },
        "dependsOn": {
          "type": "string",
          "description": "Any phases which must complete before this one"
        },
        "condition": {
          "type": "string",
          "description": "Evaluate this condition expression to determine whether to run this phase"
        },
        "continueOnError": {
          "type": "boolean",
          "description": "Continue running this phase even on failure?"
        },
        "queue": {
          "oneOf": [
            { "type": "string" },
            { "$ref": "#/definitions/queue" }
          ],
          "description": "Definition of the queue in which to run this phase",
          "examples": [
            "Hosted VS2017",
            "Hosted macOS Preview",
            "Hosted Linux Preview"
          ]
        },
        "server": {
          "type": "boolean",
          "description": "True if this is an agent-less phase (runs on server)"
        },
        "variables": {
          "type": "array",
          "description": "Phase-specific variables"
        },
        "steps": {
          "type": "array",
          "description": "A list of steps to run",
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/script" },
              { "$ref": "#/definitions/bash" },
              { "$ref": "#/definitions/powershell" },
              { "$ref": "#/definitions/checkout" },
              { "$ref": "#/definitions/task" },
              { "$ref": "#/definitions/templateReference" }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "queue": {
      "type": "object",
      "description": "Queue details",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of a queue"
        },
        "demands": {
          "oneOf": [
            { "type": "string" },
            { "type": "object" }
          ],
          "description": "List of demands (for a private pool)"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "description": "TODO"
        },
        "cancelTimeoutInMinutes": {
          "type": "integer",
          "description": "TODO"
        },
        "parallel": {
          "type": "integer",
          "description": "Maximum number of parallel agent executions"
        },
        "matrix": {
          "$ref": "#/definitions/matrix"
        }
      }
    },
    "server": {
      "type": "object",
      "description": "Server phase details",
      "properties": {
        "timeoutInMinutes": {
          "type": "integer",
          "description": "TODO"
        },
        "cancelTimeoutInMinutes": {
          "type": "integer",
          "description": "TODO"
        },
        "parallel": {
          "type": "integer",
          "description": "Maximum number of parallel agent executions"
        },
        "matrix": {
          "$ref": "#/definitions/matrix"
        }
      }
    },
    "matrix": {
      "type": "object",
      "description": "List of permutations of variable values to run",
      "minProperties": 1,
      "patternProperties": {
        "^[A-Za-z0-9_]+$": {
          "type": "object",
          "description": "Variable-value pair to pass in this matrix instance"
        }
      }
    },
    "script": {
      "type": "object",
      "description": "An inline script step",
      "required": ["script"],
      "properties": {
        "script": {
          "type": "string",
          "description": "An inline script"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for the step"
        },
        "name": {
          "type": "string",
          "description": "ID of the step",
          "pattern": "^[_A-Za-z0-9]*$"
        },
        "failOnStderr": {
          "type": "boolean",
          "description": "Fail the task if output is sent to Stderr?"
        },
        "workingDirectory": {
          "type": "string",
          "description": "Start the script with this working directory"
        },
        "condition": {
          "type": "string",
          "description": "Evaluate this condition expression to determine whether to run this script"
        },
        "continueOnError": {
          "type": "boolean",
          "description": "Continue running the parent phase even on failure?"
        },
        "enabled": {
          "type": "boolean",
          "description": "Run this script when the phase runs?"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "description": "Time to wait for this script to complete before the server kills it"
        },
        "env": {
          "type": "object",
          "description": "Variables to map into the process's environment"
        }
      },
      "additionalProperties": false
    },
    "bash": {
      "type": "object",
      "required": ["bash"],
      "properties": {
        "bash": {
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for the step"
        },
        "name": {
          "type": "string",
          "description": "ID of the step",
          "pattern": "^[_A-Za-z0-9]*$"
        },
        "failOnStderr": {
          "type": "boolean",
          "description": "Fail the task if output is sent to Stderr?"
        },
        "workingDirectory": {
          "type": "string",
          "description": "Start the script with this working directory"
        },
        "condition": {
          "type": "string",
          "description": "Evaluate this condition expression to determine whether to run this script"
        },
        "continueOnError": {
          "type": "boolean",
          "description": "Continue running the parent phase even on failure?"
        },
        "enabled": {
          "type": "boolean",
          "description": "Run this script when the phase runs?"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "description": "Time to wait for this script to complete before the server kills it"
        },
        "env": {
          "type": "object",
          "description": "Variables to map into the process's environment"
        }
      },
      "additionalProperties": false
    },
    "powershell": {
      "type": "object",
      "required": ["powershell"],
      "properties": {
        "powershell": {
          "type": "string",
          "description": "Inline PowerShell or reference to a PowerShell file"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for the step"
        },
        "name": {
          "type": "string",
          "description": "ID of the step",
          "pattern": "^[_A-Za-z0-9]*$"
        },
        "errorActionPreference": {
          "enum": ["stop", "continue", "silentlyContinue"],
          "description": "Strategy for dealing with script errors"
        },
        "failOnStderr": {
          "type": "boolean",
          "description": "Fail the task if output is sent to Stderr?"
        },
        "ignoreLASTEXITCODE": {
          "type": "boolean",
          "description": "TODO"
        },
        "workingDirectory": {
          "type": "string",
          "description": "Start the script with this working directory"
        },
        "condition": {
          "type": "string",
          "description": "Evaluate this condition expression to determine whether to run this script"
        },
        "continueOnError": {
          "type": "boolean",
          "description": "Continue running the parent phase even on failure?"
        },
        "enabled": {
          "type": "boolean",
          "description": "Run this script when the phase runs?"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "description": "Time to wait for this script to complete before the server kills it"
        },
        "env": {
          "type": "object",
          "description": "Variables to map into the process's environment"
        }
      },
      "additionalProperties": false
    },
    "checkout": {
      "type": "object",
      "required": ["checkout"],
      "properties": {
        "checkout": {
          "enum": ["self", "none"],
          "description": "Whether or not to check out the repository containing this pipeline definition"
        },
        "clean": {
          "type": "boolean",
          "description": "Start from a clean, freshly-fetched workdir?"
        },
        "fetchDepth": {
          "type": "integer",
          "description": "Depth of Git graph to fetch"
        },
        "lfs": {
          "type": "boolean",
          "description": "Fetch Git-LFS objects?"
        }  
      },
      "additionalProperties": false
    },
    "task": {
      "type": "object",
      "required": ["task"],
      "properties": {
        "task": {
          "type": "string",
          "description": "Task reference with optional major version",
          "pattern": "^[A-Za-z]*(@[0-9]+)?"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for the task"
        },
        "name": {
          "type": "string",
          "description": "ID of the task instance",
          "pattern": "^[_A-Za-z0-9]*$"
        },
        "condition": {
          "type": "string",
          "description": "Evaluate this condition expression to determine whether to run this task"
        },
        "continueOnError": {
          "type": "boolean",
          "description": "Continue running the parent phase even on failure?"
        },
        "enabled": {
          "type": "boolean",
          "description": "Run this task when the phase runs?"
        },
        "timeoutInMinutes": {
          "type": "integer",
          "description": "Time to wait for this task to complete before the server kills it"
        },
        "inputs": {
          "type": "object",
          "description": "Task-specific inputs"
        },
        "env": {
          "type": "object",
          "description": "Variables to map into the process's environment"
        }
      },
      "additionalProperties": false
    },
    "templateReference": {
      "type": "object",
      "required": ["template"],
      "properties": {
        "template": {
          "type": "string",
          "description": "A URL to a step template"
        },
        "parameters": {
          "type": "object",
          "description": "Step-specific parameters"
        }
      },
      "additionalProperties": false
    }
  }
}